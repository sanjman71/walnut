- markers   = true unless local_assigns.has_key?(:markers)
- tags      = [] unless local_assigns.has_key?(:tags)
- color     = '_orange' unless local_assigns.has_key?(:color)
- zoom      = 0 unless local_assigns.has_key?(:zoom)
- features  = location_features(location) unless local_assigns.has_key?(:features)
- klasses   = []
- klasses.push("mappable") if location.mappable?

.unselected.span-10.last{:id => "mappable_#{index}", :class => klasses.join, :lat => location.lat, :lng => location.lng, :index => index, :color => color, :zoom => zoom, |
                         :html => "<strong>#{link_to location.company_name, location_path(location)}</strong><br />#{[location.street_address, city_state_zip(location.city, location.state, location.zip)].reject(&:blank?).join("<br/>")}"} |
  - if markers and location.mappable?
    .span-1.icon-div
      -# explicit link here to prevent asset timestamp, so the url looks exactly like the js generated one in map_markers
      %img{:src => google_marker(color, index), :width => google_marker_width, :height => google_marker_height}
      -#= image_tag(google_marker(color, index), :size => google_marker_size)
  - else
    -# marker icon placeholder
    .span-1== &nbsp;

  -# cache special info, independent of its list index
  - cache("#{special.cache_key}", :expires_in => CacheExpire.locations) do
    .span-9.last.info
      .span-9.last
        %h4.name.margin-bottom-5
          = link_to location.company_name, location_path(location), :class => "#{features.join(" ")} name"
      .span-9.last
        -# build special collection
        - specials_collection = Special.preferences(special.preferences).keys.inject([]) do |array, special_key|
          - array = array + Special.collectionize(special.preferences[special_key])
          - array
        - columns = 2
        - column1 = specials_collection.size / 2 + (specials_collection.size % columns == 0 ? 0 : 1)
        .span-9.last.bottom.padding-bottom-5
          - reset_cycle
          .span-4#specials_column
            %ul{:style => 'list-style-type: disc; margin-left: 0px; padding-bottom: 0px;'}
              - specials_collection.slice(0, column1).each do |s|
                %li{:class => cycle('gray', '')}= s
          - reset_cycle
          .span-5.last#specials_column
            %ul{:style => 'list-style-type: disc; margin-left: 0px;'}
              - specials_collection.slice(column1, specials_collection.size).each do |s|
                %li{:class => cycle('gray', '')}= s

        -# show each special
        -#- Special.preferences(special.preferences).keys.each do |special_key|
          -#.span-9.last.bottom.padding-bottom-5
            -#%span{:style => 'color: #999;'}== #{Special.preference_name(special_key).titleize}:
            -#- special_collection = Special.collectionize(special.preferences[special_key])
            -#- special_collection.each_with_index do |s, i|
              -#= s
              -#- unless i == special_collection.length-1
                -#%span{:style => 'color: #0099FF; font-size: 1.1em; padding: 0px; margin: 0px;'}== &bull; 
