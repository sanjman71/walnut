- title(@title)
- robots('index', 'follow') unless @robots == false

.span-15.prepend-1.mat.padding-top-10.padding-bottom-10
  %h1.title= @h1
  %h4#breadcrumbs
    = render(:partial => 'shared/breadcrumbs', :locals => {:tree => 'search', :country => @country, :state => @state, :city => @city, :zip => @zip, :neighborhood => @neighborhood, :link_all => true})

.span-8.padding-top-5.bottom.last#weather
  - unless @weather.blank?
    - cache("#{@weather.name.to_url_param}", :expires_in => CacheExpire.weather) do
      = render(:partial => 'shared/weather', :locals => {:weather => @weather})

%hr.space

.span-24.last
  .span-5#sidebar
    #related_tags
      = render(:partial => 'search/related_tags', :locals => {:title => "Related Searches", :tags => @related_tags}) unless @related_tags.blank?
    #neighborhoods
      = render(:partial => 'search/city_neighborhoods', :locals => {:neighborhoods => @neighborhoods, :city => @city, :tag => @tag.to_s, :query => @query}) unless @neighborhoods.blank?

    -# move to after partials - google ad - search index left side vertical banner
    -#= render :partial => 'adsense/search_index_left_verticalbanner'

    #zips
      = render(:partial => 'search/city_zips', :locals => {:zips => @zips, :city => @city, :tag => @tag.to_s, :query => @query}) unless @zips.blank?
    #cities
      = render(:partial => 'search/zip_cities', :locals => {:cities => @cities, :zip => @zip, :tag => @tag.to_s, :query => @query}) unless @cities.blank?
    #nearby_cities
      = render(:partial => 'search/nearby_cities', :locals => {:nearby_cities => @nearby_cities, :city => @city, :tag => @tag.to_s, :query => @query}) unless @nearby_cities.blank?

    -# google ad - search index left side vertical banner
    = render :partial => 'adsense/search_index_left_verticalbanner'

  .span-19.last
    -# google ad - search index top leaderboard
    = render :partial => 'adsense/search_index_top_leaderboard'
  
  .span-19.last
    %hr.space
  
  .span-19.last#search
    .span-10
      %h4= page_entries_info(@objects, :entry_name => "result")
    .span-9.last
      = will_paginate(@objects, :page_links => true)

    .span-19.last
      - if @search_filters.keys.size > 0
        -# filter search results by type
        - @search_filters.keys.each do |klass|
          %span
            = link_to("Search #{klass_to_word(klass.pluralize).titleize} only", build_search_route(klass, @geo_search, @geo_params.merge(:tag => @tag.to_s, :query => @query).compact), :style => 'color: #0099FF;')
            = "&nbsp;|&nbsp;" unless klass == @search_filters.keys[-1]
    
    .span-10
      - @objects.each_with_index do |object, i|
        .span-10.letterbox-5.border_bottom.search_result[object]
          - case object.class.to_s
          - when 'Location'
            -# show search nearby tags for city searches that are not based around a point
            - tags = [] #(@city and !@geo_origin) ? object.tags : []
            = render(:partial => 'search/location', :locals => {:location => object, :query => @query, :tags => tags, :index => i})
          - when 'Appointment'
            = render(:partial => 'search/event', :locals => {:event => object, :query => @query, :tags => [], :index => i})

    .span-9.last
      - unless @objects.blank?
        .jmap#map{:style => "width: 350px; height: 430px;"}

    %hr.space
  
    .span-10
      %h4= page_entries_info(@objects, :entry_name => "result")
    .span-9.last
      = will_paginate(@objects, :page_links => true)

    .span-19.last
      -# google ad - search index bottom leaderboard
      = render :partial => 'adsense/search_index_bottom_leaderboard'

