- title(@title)
-# The Google maps Javascript needs to be included before the other javascript files, as some refer to Google (in particular, markermanager)
- content_for :javascript do
  %script{:src => GOOGLE_MAPS_API_URL, :type => 'text/javascript'}
- javascript("jquery.jmap", "places", "map_markers")

.span-23.prepend-1.mat.padding-top-10.padding-bottom-10
  %h1= @h1
  %h4#breadcrumbs
    = render(:partial => 'shared/breadcrumbs', :locals => {:country => @country, :state => @state, :city => @city, :zip => @zip, :neighborhood => @neighborhood, :link_all => true})
  
%hr.space

.span-22.prepend-2
  -# show a google ad
  = google_ad(728, 90, 'image')

%hr.space

.span-5#sidebar
  #neighborhoods
    = render(:partial => 'city_neighborhoods', :locals => {:neighborhoods => @neighborhoods, :city => @city, :what => @what}) unless @neighborhoods.blank?
  #zips
    = render(:partial => 'city_zips', :locals => {:zips => @zips, :city => @city, :what => @what}) unless @zips.blank?
  #cities
    = render(:partial => 'zip_cities', :locals => {:cities => @cities, :zip => @zip, :what => @what}) unless @cities.blank?
  #nearby_cities
    = render(:partial => 'nearby_cities', :locals => {:nearby_cities => @nearby_cities, :city => @city, :what => @what}) unless @nearby_cities.blank?

  -# show another google ad
  = google_ad(160, 600)

.span-19.last#search
  .span-10
    %h4= page_entries_info @objects unless @objects.blank?
  .span-4.prepend-5.last
    = will_paginate(@objects, :page_links => false)

  .span-19.last
    - if @klasses.keys.size > 0
      -# show number of results by type
      - @klasses.keys.each do |klass|
        %span{:style => 'font-weight: bold; color: #111111;'}
          = pluralize(@klasses[klass].size, klass)
          == -
          = link_to("Search #{klass.pluralize} only", build_search_route(klass, 'city', @locality_params.merge(:tag => @tag, :what => @what).compact), :style => 'font-weight: bold; color: #007700;')
          = "&nbsp;|&nbsp;" unless klass == @klasses.keys[-1]
    
  .span-10
    - @objects.each_with_index do |object, i|
      .span-10.letterbox[object]{:class => cycle("", ""), :style => "border-bottom:2px solid #eee;"}
        - case object.class.to_s
        - when 'Location'
          = render(:partial => 'location', :locals => {:location => object, :what => @what, :tags => @tags, :index => i})
        - when 'Event'
          = render(:partial => 'event', :locals => {:event => object, :what => @what, :tags => @tags, :index => i})

  .span-9.last
    .jmap#map{:style => "width: 350px; height: 400px;"}

  .span-10
    %h4= page_entries_info @objects unless @objects.blank?
  .span-4.prepend-5.last
    = will_paginate(@objects, :page_links => false)

  .span-19.last
    -# show a google ad
    = google_ad(728, 90, 'image')
