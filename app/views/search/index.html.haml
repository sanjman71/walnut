- title(@title)
- robots('index', 'follow') unless @objects.blank? or @robots == false

-# The Google maps Javascript needs to be included before the other javascript files, as some refer to Google (in particular, markermanager)
- content_for :javascript do
  %script{:src => GOOGLE_MAPS_API_URL, :type => 'text/javascript'}
- javascript("jquery.jmap", "places", "map_markers")

.span-23.prepend-1.mat.padding-top-10.padding-bottom-10
  %h1= @h1
  %h5== Query: #{@raw_query}
  %h4#breadcrumbs
    = render(:partial => 'shared/breadcrumbs', :locals => {:tree => 'search', :country => @country, :state => @state, :city => @city, :zip => @zip, :neighborhood => @neighborhood, :link_all => true})
  
%hr.space

.span-22.prepend-2
  -# show a google ad
  = google_ad(728, 90, 'image')

%hr.space

.span-5#sidebar
  #related_tags
    = render(:partial => 'search/related_tags', :locals => {:title => "Related Searches", :tags => @related_tags}) unless @related_tags.blank?
  #neighborhoods
    = render(:partial => 'search/city_neighborhoods', :locals => {:neighborhoods => @neighborhoods, :city => @city, :tag => @tag, :what => @what}) unless @neighborhoods.blank?
  #zips
    = render(:partial => 'search/city_zips', :locals => {:zips => @zips, :city => @city, :tag => @tag, :what => @what}) unless @zips.blank?
  #cities
    = render(:partial => 'search/zip_cities', :locals => {:cities => @cities, :zip => @zip, :tag => @tag, :what => @what}) unless @cities.blank?
  #nearby_cities
    = render(:partial => 'search/nearby_cities', :locals => {:nearby_cities => @nearby_cities, :city => @city, :tag => @tag, :what => @what}) unless @nearby_cities.blank?

  -# show another google ad
  = google_ad(160, 600)

.span-19.last#search
  .span-10
    %h4
      - if @objects.blank?
        %span{:style => 'font-size: 0.9em; font-weight: bold;'}
          == No search results.
          == Please check your search criteria and try again
      - else
        = page_entries_info @objects
  .span-9.last
    = will_paginate(@objects, :page_links => true)

  .span-19.last
    - if @search_filters.keys.size > 0
      -# filter search results by type
      - @search_filters.keys.each do |klass|
        %span{:style => 'font-weight: bold; font-size: 1.1em;'}
          = link_to("Search #{klass.pluralize} only", build_search_route(klass, 'city', @locality_params.merge(:tag => @tag, :what => @what).compact), :style => 'color: #0099FF;')
          = "&nbsp;|&nbsp;" unless klass == @search_filters.keys[-1]
    
  .span-10
    - @objects.each_with_index do |object, i|
      .span-10.letterbox-5.border_bottom[object]
        - case object.class.to_s
        - when 'Location'
          - if object.events_count == 0
            / Regular location
            = render(:partial => 'location', :locals => {:location => object, :what => @what, :tags => @tags, :index => i, :color => "_purple", :nameclass => 'place'})
          - else
            / Event location - use a different color from a typical location
            = render(:partial => 'location', :locals => {:location => object, :what => @what, :tags => @tags, :index => i, :color => "_green", :nameclass => 'event-location'})
        - when 'Event'
          = render(:partial => 'event', :locals => {:event => object, :what => @what, :tags => @tags, :index => i})

  .span-9.last
    - unless @objects.blank?
      .jmap#map{:style => "width: 350px; height: 430px;"}

  %hr.space
  
  .span-10
    %h4= page_entries_info @objects unless @objects.blank?
  .span-9.last
    = will_paginate(@objects, :page_links => true)

  .span-19.last
    - unless @objects.blank?
      -# show a google ad
      = google_ad(728, 90, 'image')
