- markers   = true unless local_assigns.has_key?(:markers)
- color     = "_orange"
- zoom      = 0 unless local_assigns.has_key?(:zoom)
- klasses   = []
- klasses.push("mappable") if event.mappable?

.unselected.span-10.last{:id => "mappable_#{index}", :class => klasses.join, :lat => event.location.lat, :lng => event.location.lng, :index => index, :color => color, :zoom => zoom, |
                         :html => "<strong>#{event.name}</strong><br/>At #{event.location_name}<br/>#{link_to "Details", event.url}"} |

  - if markers
    -# cache event google marker
    - cache("google:marker:#{color}:#{index}") do
      .span-1
        = image_tag("/images/marker" + color + Array('A'..'Z')[index] + ".png", :size => '15x25')
  - else
    -# marker icon placeholder
    .span-1== &nbsp;

  -# cache event info, independent of its list index
  - cache("#{event.cache_key}", :expires_in => CacheExpire.events) do
    .span-7.info
      %h4.name.margin-bottom-5{:style => 'font-weight: normal;'}
        = truncate(event.name, :length => 30)
      %h4.venue.margin-bottom-5
        -# link to event location
        = link_to event.location_name, location_path(event.location), :class => 'event location'
      %h6.details.bottom{:style => 'font-weight: normal;'}
        %span{:style => 'color: #111111;'}= event.start_at.to_s(:appt_time)
        - if !event.url.blank?
          - # link to event url, important for eventful events
          %span{:style => 'padding-left: 5px;'}= link_to "Details", event.url
    .span-2.date.last
      = render(:partial => 'events/calendar_date', :locals => {:date => event.start_at})
