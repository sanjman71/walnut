- state         = nil unless local_assigns.has_key?(:state)
- zip           = nil unless local_assigns.has_key?(:zip)
- city          = nil unless local_assigns.has_key?(:city)
- neighborhood  = nil unless local_assigns.has_key?(:neighborhood)
- link_all      = nil unless local_assigns.has_key?(:link_all) # if true, link all breadcrumb objects

- separator     = ">"

-# build ordered hash mapping locality type to object
- localities                = ActiveSupport::OrderedHash.new
- localities[:country]      = country unless country.blank?
- localities[:state]        = state unless state.blank?
- localities[:city]         = city unless city.blank?
- localities[:city]         = city unless city.blank?
- localities[:zip]          = zip unless zip.blank?
- localities[:neighborhood] = neighborhood unless neighborhood.blank?
- size                      = localities.size

- localities.each_with_index do |tuple, index|
  - klass, locality = tuple
  - next if locality.blank?
  - if index == size-1 and link_all.nil?
    %span{:class => klass}= locality.name
  - else
    = link_to locality.name, build_locality_route(locality, localities), :class => klass

  -# show separator unless its the last object
  = separator unless index == size-1