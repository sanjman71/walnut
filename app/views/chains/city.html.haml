- title(@title)
- robots('index', 'follow') unless @locations.blank? or @robots == false

-# The Google maps Javascript needs to be included before the other javascript files, as some refer to Google (in particular, markermanager)
- content_for :javascript do
  %script{:src => GOOGLE_MAPS_API_URL, :type => 'text/javascript'}
- javascript("jquery.jmap", "places", "map_markers")

.span-15.prepend-1.mat.padding-top-10.padding-bottom-10
  %h1{:style => 'font-size: 1.5em;'}= @h1
  %h4#breadcrumbs
    = render(:partial => 'shared/breadcrumbs', :locals => {:tree => 'chains', :country => @country, :state => @state, :city => @city, :object => @chain})

.span-8.padding-top-5.bottom.last#weather
  - unless @weather.blank?
    - cache("#{@weather.name.to_url_param}", :expires_in => CacheExpire.weather) do
      = render(:partial => 'shared/weather', :locals => {:weather => @weather})

%hr.space

.span-5#sidebar
  -# google ad - chain city show left wide skyscraper
  = render :partial => 'adsense/chain_city_show_left_wideskyscraper'

.span-19.last
  .span-10
    %h4= page_entries_info @locations
  .span-9.last
    = will_paginate(@locations, :page_links => true)
  
  .span-10
    -# render chain places as regular search results
    - @locations.each_with_index do |location, i|
      .span-10.letterbox-5.border_bottom.search_result[location]
        -# show chain locations as regular locations
        = render(:partial => 'search/location', :locals => {:location => location, :index => i})

    - unless @nearby_cities.blank?
      .span-10.padding-top-10#nearby_cities
        = render(:partial => 'chains/nearby_cities', :locals => {:chain => @chain, :cities => @nearby_cities})

  .span-9.last
    - unless @locations.blank?
      .jmap#map{:style => "width: 350px; height: 430px;"}

