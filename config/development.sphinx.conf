indexer
{
}

searchd
{
  listen = 127.0.0.1:3312
  log = /Users/sanjay/Rails/walnut/log/searchd.log
  query_log = /Users/sanjay/Rails/walnut/log/searchd.query.log
  pid_file = /Users/sanjay/Rails/walnut/log/searchd.development.pid
  max_matches = 200
}

source event_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = rails
  sql_pass = rails
  sql_db = walnut_development
  sql_port = 3306
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT `events`.`id` * 2 + 0 AS `id` , CAST(`events`.`name` AS CHAR) AS `name`, CAST(`locations`.`street_address` AS CHAR) AS `address`, CAST(GROUP_CONCAT(`tags`.`name` SEPARATOR ' ') AS CHAR) AS `tags`, UNIX_TIMESTAMP(`events`.`start_at`) AS `start_at`, `events`.`popularity` AS `popularity`, `events`.`location_id` AS `events`, `locations`.`country_id` AS `country_id`, `locations`.`state_id` AS `state_id`, `locations`.`city_id` AS `city_id`, `locations`.`zip_id` AS `zip_id`, GROUP_CONCAT(`neighborhoods`.`id` SEPARATOR ',') AS `neighborhood_ids`, GROUP_CONCAT(`event_categories`.`id` SEPARATOR ',') AS `event_category_ids`, GROUP_CONCAT(`tags`.`id` SEPARATOR ',') AS `tag_ids`, `events`.`id` AS `sphinx_internal_id`, 4201588131 AS `class_crc`, '4201588131' AS `subclass_crcs`, 0 AS `sphinx_deleted` FROM events    LEFT OUTER JOIN `locations` ON `locations`.id = `events`.location_id   LEFT OUTER JOIN `taggings` ON (`events`.`id` = `taggings`.`taggable_id` AND `taggings`.`taggable_type` = 'Event')  LEFT OUTER JOIN `tags` ON (`tags`.`id` = `taggings`.`tag_id`) AND context = 'event_tags'   LEFT OUTER JOIN `location_neighborhoods` ON (`locations`.`id` = `location_neighborhoods`.`location_id`)  LEFT OUTER JOIN `neighborhoods` ON (`neighborhoods`.`id` = `location_neighborhoods`.`neighborhood_id`)   LEFT OUTER JOIN `event_category_mappings` ON (`events`.`id` = `event_category_mappings`.`event_id`)  LEFT OUTER JOIN `event_categories` ON (`event_categories`.`id` = `event_category_mappings`.`event_category_id`)  WHERE `events`.`id` >= $start   AND `events`.`id` <= $end    GROUP BY `events`.`id`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`id`), 1), IFNULL(MAX(`id`), 1) FROM `events` 
  sql_attr_uint = popularity
  sql_attr_uint = events
  sql_attr_uint = country_id
  sql_attr_uint = state_id
  sql_attr_uint = city_id
  sql_attr_uint = zip_id
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = class_crc
  sql_attr_uint = sphinx_deleted
  sql_attr_timestamp = start_at
  sql_attr_multi = uint neighborhood_ids from field
  sql_attr_multi = uint event_category_ids from field
  sql_attr_multi = uint tag_ids from field
  sql_attr_multi = uint subclass_crcs from field
  sql_query_info = SELECT * FROM `events` WHERE  `id` = (($id - 0) / 2)
}

index event_core
{
  source = event_core_0
  path = /Users/sanjay/Rails/walnut/db/sphinx/development/event_core
  morphology = stem_en
  charset_type = utf-8
  ignore_chars = U+0027
}

index event
{
  type = distributed
  local = event_core
}

source location_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = rails
  sql_pass = rails
  sql_db = walnut_development
  sql_port = 3306
  sql_query_pre = UPDATE `locations` SET `delta` = 0
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT `locations`.`id` * 2 + 1 AS `id` , CAST(GROUP_CONCAT(`companies`.`name` SEPARATOR ' ') AS CHAR) AS `name`, CAST(`locations`.`street_address` AS CHAR) AS `address`, CAST(GROUP_CONCAT(`tags`.`name` SEPARATOR ' ') AS CHAR) AS `tags`, GROUP_CONCAT(`tags`.`id` SEPARATOR ',') AS `tag_ids`, `locations`.`country_id` AS `country_id`, `locations`.`state_id` AS `state_id`, `locations`.`city_id` AS `city_id`, `locations`.`zip_id` AS `zip_id`, GROUP_CONCAT(`neighborhoods`.`id` SEPARATOR ',') AS `neighborhood_ids`, `locations`.`popularity` AS `popularity`, GROUP_CONCAT(`companies`.`chain_id` SEPARATOR ',') AS `chain_ids`, `locations`.`recommendations_count` AS `recommendations`, `locations`.`events_count` AS `events`, RADIANS(locations.lat) AS `lat`, RADIANS(locations.lng) AS `lng`, `locations`.`id` AS `sphinx_internal_id`, 2817059741 AS `class_crc`, '2817059741' AS `subclass_crcs`, 0 AS `sphinx_deleted` FROM locations    LEFT OUTER JOIN `company_locations` ON (`locations`.`id` = `company_locations`.`location_id`)  LEFT OUTER JOIN `companies` ON (`companies`.`id` = `company_locations`.`company_id`)   LEFT OUTER JOIN `taggings` ON (`companies`.`id` = `taggings`.`taggable_id` AND `taggings`.`taggable_type` = 'Company')  LEFT OUTER JOIN `tags` ON (`tags`.`id` = `taggings`.`tag_id`) AND context = 'tags'   LEFT OUTER JOIN `location_neighborhoods` ON (`locations`.`id` = `location_neighborhoods`.`location_id`)  LEFT OUTER JOIN `neighborhoods` ON (`neighborhoods`.`id` = `location_neighborhoods`.`neighborhood_id`)  WHERE `locations`.`id` >= $start   AND `locations`.`id` <= $end    AND `locations`.`delta` = 0 AND status = 0 GROUP BY `locations`.`id`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`id`), 1), IFNULL(MAX(`id`), 1) FROM `locations` WHERE `locations`.`delta` = 0
  sql_attr_uint = country_id
  sql_attr_uint = state_id
  sql_attr_uint = city_id
  sql_attr_uint = zip_id
  sql_attr_uint = popularity
  sql_attr_uint = chain_ids
  sql_attr_uint = recommendations
  sql_attr_uint = events
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = class_crc
  sql_attr_uint = sphinx_deleted
  sql_attr_float = lat
  sql_attr_float = lng
  sql_attr_multi = uint tag_ids from field
  sql_attr_multi = uint neighborhood_ids from field
  sql_attr_multi = uint subclass_crcs from field
  sql_query_info = SELECT * FROM `locations` WHERE  `id` = (($id - 1) / 2)
}

index location_core
{
  source = location_core_0
  path = /Users/sanjay/Rails/walnut/db/sphinx/development/location_core
  morphology = stem_en
  charset_type = utf-8
  ignore_chars = U+0027
}

source location_delta_0 : location_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = rails
  sql_pass = rails
  sql_db = walnut_development
  sql_port = 3306
  sql_query_pre = 
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT `locations`.`id` * 2 + 1 AS `id` , CAST(GROUP_CONCAT(`companies`.`name` SEPARATOR ' ') AS CHAR) AS `name`, CAST(`locations`.`street_address` AS CHAR) AS `address`, CAST(GROUP_CONCAT(`tags`.`name` SEPARATOR ' ') AS CHAR) AS `tags`, GROUP_CONCAT(`tags`.`id` SEPARATOR ',') AS `tag_ids`, `locations`.`country_id` AS `country_id`, `locations`.`state_id` AS `state_id`, `locations`.`city_id` AS `city_id`, `locations`.`zip_id` AS `zip_id`, GROUP_CONCAT(`neighborhoods`.`id` SEPARATOR ',') AS `neighborhood_ids`, `locations`.`popularity` AS `popularity`, GROUP_CONCAT(`companies`.`chain_id` SEPARATOR ',') AS `chain_ids`, `locations`.`recommendations_count` AS `recommendations`, `locations`.`events_count` AS `events`, RADIANS(locations.lat) AS `lat`, RADIANS(locations.lng) AS `lng`, `locations`.`id` AS `sphinx_internal_id`, 2817059741 AS `class_crc`, '2817059741' AS `subclass_crcs`, 0 AS `sphinx_deleted` FROM locations    LEFT OUTER JOIN `company_locations` ON (`locations`.`id` = `company_locations`.`location_id`)  LEFT OUTER JOIN `companies` ON (`companies`.`id` = `company_locations`.`company_id`)   LEFT OUTER JOIN `taggings` ON (`companies`.`id` = `taggings`.`taggable_id` AND `taggings`.`taggable_type` = 'Company')  LEFT OUTER JOIN `tags` ON (`tags`.`id` = `taggings`.`tag_id`) AND context = 'tags'   LEFT OUTER JOIN `location_neighborhoods` ON (`locations`.`id` = `location_neighborhoods`.`location_id`)  LEFT OUTER JOIN `neighborhoods` ON (`neighborhoods`.`id` = `location_neighborhoods`.`neighborhood_id`)  WHERE `locations`.`id` >= $start   AND `locations`.`id` <= $end    AND `locations`.`delta` = 1 AND status = 0 GROUP BY `locations`.`id`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`id`), 1), IFNULL(MAX(`id`), 1) FROM `locations` WHERE `locations`.`delta` = 1
  sql_attr_uint = country_id
  sql_attr_uint = state_id
  sql_attr_uint = city_id
  sql_attr_uint = zip_id
  sql_attr_uint = popularity
  sql_attr_uint = chain_ids
  sql_attr_uint = recommendations
  sql_attr_uint = events
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = class_crc
  sql_attr_uint = sphinx_deleted
  sql_attr_float = lat
  sql_attr_float = lng
  sql_attr_multi = uint tag_ids from field
  sql_attr_multi = uint neighborhood_ids from field
  sql_attr_multi = uint subclass_crcs from field
  sql_query_info = SELECT * FROM `locations` WHERE  `id` = (($id - 1) / 2)
}

index location_delta : location_core
{
  source = location_delta_0
  path = /Users/sanjay/Rails/walnut/db/sphinx/development/location_delta
}

index location
{
  type = distributed
  local = location_delta
  local = location_core
}
